docker pull nginx
docker build -t aspnetapp .
docker run -d -p 8085:80 --hostname aspnetapp --name aspnetapp1 aspnetapp

docker images
docker inspect aspnetapp1
docker logs -t aspnetapp1
docker logs aspnetapp1 -f
docker ps
docker ps -l
docker ps -n 2
docker ps -a

docker exec aspnetapp1 hostname
docker exec -it aspnetapp1 bash

docker rm -f aspnetapp2
docker rm aspnetapp2
docker rename aspnetapp1 aspnetapp2
docker stats aspnetapp1

docker info

docker exec -it a9c2ecf24225 bash
docker network create net-prueba --subnet 192.168.0.0/24 --gateway 192.168.0.1
docker network create --subnet 172.16.0.0/16 --gateway 172.16.0.1 net-claseb
docker network inspect net-prueba
docker run -dti --network net-prueba --name centos1 centos
docker run -dti --network net-prueba --ip 192.168.0.10 --name centos2 centos
docker logs 17fb8edf808e
docker rm -f 17fb8edf808e ca98f46b2137
docker run -d --network net-prueba --name centos1 centos
docker image rm -f 5d0da3dc9764
docker network ls
docker run -dti --name centos3 --network net-claseb centos
docker inspect centos3
docker network connect net-claseb centos1


***********************************************************************
volumen nombrado para mantener persistencia de datos
***********************************************************************

docker volume create aspnetapp_volume
docker volume ls


***********************************************************************
Dockerfile 1 (PUBLISH)
***********************************************************************

FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80

COPY [".", "./"]
ENTRYPOINT ["dotnet", "DockerMVCNetCore.dll"]


***********************************************************************
Dockerfile 1 (BUILD)
***********************************************************************

FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["DockerMVCNetCore.csproj", "./"]
RUN dotnet restore "./DockerMVCNetCore.csproj"
COPY . .
WORKDIR "/src/."
RUN dotnet build "DockerMVCNetCore.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "DockerMVCNetCore.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "DockerMVCNetCore.dll"]

